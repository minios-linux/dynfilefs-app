# .github/workflows/build-deb.yml
name: Build dynfilefs Debian Package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build on ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: i386
            platform: linux/386

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU for crossâ€‘arch Docker
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/386 # Only need to specify the non-native platform

      - name: Pull Debian Bookworm container
        run: |
          # FIXED: Switched to the official debian:bookworm image
          docker pull --platform ${{ matrix.platform }} debian:bookworm

      - name: Build inside Bookworm container
        run: |
          # FIXED: Using the official debian:bookworm image
          docker run --rm --privileged \
            --platform ${{ matrix.platform }} \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            debian:bookworm \
            bash -euxc '
              # Install build tools
              apt-get update
              DEBIAN_FRONTEND=noninteractive apt-get install -y \
                git \
                dpkg-dev \
                debhelper \
                build-essential \
                libfuse-dev

              # Prepare source and debian/
              git clone --branch dynfilefs-v4.04 https://github.com/Tomas-M/dynfilefs.git source
              cp -r debian source/

              # Build .deb
              cd source
              dpkg-buildpackage -us -uc
            '

      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dynfilefs-${{ matrix.arch }}
          path: |
            dynfilefs_*.deb
            dynfilefs-dbgsym_*.deb

      - name: Clean up workspace
        if: always()
        run: |
          rm -rf source dynfilefs_*.deb dynfilefs-dbgsym_*.deb